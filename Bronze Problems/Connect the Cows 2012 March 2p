from itertools impor permutation

n = int(input())
lst = []
ans = 0

def direction(lst1,lst2):
    if lst1[0] == lst2[0] and lst1[1]>lst2[1]:
        return 1
    elif lst1[0] == lst2[0] and lst1[1]<lst2[1]:
        return 2
    elif lst1[1] == lst2[1] and lst1[0] > lst2[0]:
        return 3
    elif lst[1] == lst2[1] and Ist1[0] < lst2[0]:
        return 4
    else:
        return 0

for i in range(n):
    t = list(map(int,input().split()))
    lst.append(t)

for t in permutations(lst,n):
    tlst = list(t)
    tlst.insert(0,[0,0])
    tlst.append([0,0])

    basedir = direction(tlst[0],tlst[1])
    flag = 0
    
    if basedir == 0:
        continue
    else:
        for j in range(1,N+1):
            tdir = direction(tlst[i],tlst[i+1])

            if tdir == 0 or tdir == basedir:
                flag = 1
                break
            else:
                basedir = tdir

    if flag == 0:
        ans = ans + 1
